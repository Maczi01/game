{"version":3,"sources":["js/index.js"],"names":["addEventListener","gridDisplay","document","querySelector","scoreDisplay","result","refresh","width","squares","score","createBoard","i","square","createElement","innerHTML","className","generateColor","appendChild","push","generateRandomNumber","nodeListOf","querySelectorAll","length","remove","console","log","generateTwoOrFour","number","Math","floor","random","randomSquare","randomNumber","classList","add","checkForGameOver","moveRight","totalOne","totalTwo","totalThree","totalFour","row","parseInt","filteredRow","filter","num","missingSquares","zeros","Array","fill","newRow","moveLeft","moveDown","columns","filteredColumns","newColumn","moveUp","combineRow","totals","checkIfWin","combineColumn","control","e","keyCode","keyRight","keyLeft","keyDown","keyUp","removeEventListener"],"mappings":"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","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n    const gridDisplay = document.querySelector('.grid');\r\n    const scoreDisplay = document.querySelector(\"#score\")\r\n    const result = document.querySelector(\"result\");\r\n    const refresh = document.querySelector(\".btn-menu\")\r\n    const width = 4;\r\n    let squares = [];\r\n    let score = 0;\r\n\r\n    function createBoard() {\r\n        for (let i = 0; i < width * width; i++) {\r\n            square = document.createElement('div');\r\n            square.innerHTML = 0;\r\n            square.className = generateColor(0)\r\n            gridDisplay.appendChild(square);\r\n            squares.push(square)\r\n        }\r\n        generateRandomNumber();\r\n        generateRandomNumber();\r\n    }\r\n\r\n    createBoard();\r\n\r\n    refresh.addEventListener('click', function () {\r\n        // gridDisplay.removeChild(square)\r\n        let nodeListOf = gridDisplay.querySelectorAll('div');\r\n        for (let i = 0; i < nodeListOf.length; i++) {\r\n            nodeListOf[i].remove()\r\n        }\r\n        console.log(nodeListOf)\r\n        // gridDisplay.removeChild('div')\r\n        // gridDisplay.innerHTML = \"\"\r\n        createBoard()\r\n    })\r\n\r\n\r\n    function generateTwoOrFour() {\r\n        const number = Math.floor(Math.random() * 11);\r\n        if (number > 8) {\r\n            return 4;\r\n        } else\r\n            return 2\r\n    }\r\n\r\n    function generateRandomNumber() {\r\n        let randomSquare = Math.floor(Math.random() * squares.length)\r\n\r\n        if (squares[randomSquare].innerHTML == 0) {\r\n            let randomNumber = generateTwoOrFour();\r\n            squares[randomSquare].innerHTML = randomNumber;\r\n            squares[randomSquare].className = generateColor(randomNumber)\r\n            squares[randomSquare].classList.add(\"appear\")\r\n            checkForGameOver()\r\n        } else {\r\n            generateRandomNumber();\r\n        }\r\n    }\r\n\r\n    function moveRight() {\r\n        for (let i = 0; i < 16; i++) {\r\n            if (i % 4 === 0) {\r\n                let totalOne = squares[i].innerHTML\r\n                let totalTwo = squares[i + 1].innerHTML\r\n                let totalThree = squares[i + 2].innerHTML\r\n                let totalFour = squares[i + 3].innerHTML\r\n                let row = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\r\n                let filteredRow = row.filter(num => num)\r\n                let missingSquares = 4 - filteredRow.length;\r\n                let zeros = Array(missingSquares).fill(0);\r\n                let newRow = [...zeros, ...filteredRow]\r\n\r\n                squares[i].innerHTML = newRow[0]\r\n                squares[i].className = generateColor(newRow[0])\r\n\r\n                squares[i + 1].innerHTML = newRow[1]\r\n                squares[i + 1].className = generateColor(newRow[1])\r\n\r\n                squares[i + 2].innerHTML = newRow[2]\r\n                squares[i + 2].className = generateColor(newRow[2])\r\n\r\n                squares[i + 3].innerHTML = newRow[3]\r\n                squares[i + 3].className = generateColor(newRow[3])\r\n            }\r\n        }\r\n    }\r\n\r\n    function moveLeft() {\r\n        for (let i = 0; i < 16; i++) {\r\n            if (i % 4 === 0) {\r\n                let totalOne = squares[i].innerHTML\r\n                let totalTwo = squares[i + 1].innerHTML\r\n                let totalThree = squares[i + 2].innerHTML\r\n                let totalFour = squares[i + 3].innerHTML\r\n                let row = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\r\n                let filteredRow = row.filter(num => num)\r\n                let missingSquares = 4 - filteredRow.length;\r\n                let zeros = Array(missingSquares).fill(0);\r\n                let newRow = [...filteredRow, ...zeros]\r\n\r\n\r\n                squares[i].innerHTML = newRow[0]\r\n                squares[i].className = generateColor(newRow[0])\r\n\r\n                squares[i + 1].innerHTML = newRow[1]\r\n                squares[i + 1].className = generateColor(newRow[1])\r\n\r\n                squares[i + 2].innerHTML = newRow[2]\r\n                squares[i + 2].className = generateColor(newRow[2])\r\n\r\n                squares[i + 3].innerHTML = newRow[3]\r\n                squares[i + 3].className = generateColor(newRow[3])\r\n            }\r\n        }\r\n    }\r\n\r\n    function moveDown() {\r\n        for (let i = 0; i < 4; i++) {\r\n            let totalOne = squares[i].innerHTML\r\n            let totalTwo = squares[i + (width)].innerHTML\r\n            let totalThree = squares[i + (width * 2)].innerHTML\r\n            let totalFour = squares[i + (width * 3)].innerHTML\r\n            let columns = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\r\n            let filteredColumns = columns.filter(num => num)\r\n            let missingSquares = 4 - filteredColumns.length;\r\n            let zeros = Array(missingSquares).fill(0);\r\n            let newColumn = [...zeros, ...filteredColumns]\r\n\r\n            squares[i].innerHTML = newColumn[0]\r\n            squares[i].className = generateColor(newColumn[0])\r\n\r\n            squares[i + (width)].innerHTML = newColumn[1]\r\n            squares[i + (width)].className = generateColor(newColumn[1])\r\n\r\n            squares[i + (width * 2)].innerHTML = newColumn[2]\r\n            squares[i + (width * 2)].className = generateColor(newColumn[2])\r\n\r\n            squares[i + (width * 3)].innerHTML = newColumn[3]\r\n            squares[i + (width * 3)].className = generateColor(newColumn[3])\r\n        }\r\n    }\r\n\r\n    function moveUp() {\r\n        for (let i = 0; i < 4; i++) {\r\n            let totalOne = squares[i].innerHTML\r\n            let totalTwo = squares[i + (width)].innerHTML\r\n            let totalThree = squares[i + (width * 2)].innerHTML\r\n            let totalFour = squares[i + (width * 3)].innerHTML\r\n            let columns = [parseInt(totalOne), parseInt(totalTwo), parseInt(totalThree), parseInt(totalFour)]\r\n            let filteredColumns = columns.filter(num => num)\r\n            let missingSquares = 4 - filteredColumns.length;\r\n            let zeros = Array(missingSquares).fill(0);\r\n            let newColumn = [...filteredColumns, ...zeros]\r\n\r\n            squares[i].innerHTML = newColumn[0]\r\n            squares[i].className = generateColor(newColumn[0])\r\n\r\n            squares[i + (width)].innerHTML = newColumn[1]\r\n            squares[i + (width)].className = generateColor(newColumn[1])\r\n\r\n            squares[i + (width * 2)].innerHTML = newColumn[2]\r\n            squares[i + (width * 2)].className = generateColor(newColumn[2])\r\n\r\n            squares[i + (width * 3)].innerHTML = newColumn[3]\r\n            squares[i + (width * 3)].className = generateColor(newColumn[3])\r\n        }\r\n    }\r\n\r\n    function combineRow() {\r\n        for (let i = 0; i < 15; i++) {\r\n            if (squares[i].innerHTML === squares[i + 1].innerHTML) {\r\n                let totals = parseInt(squares[i].innerHTML) + parseInt(squares[i + 1].innerHTML)\r\n                squares[i].innerHTML = totals;\r\n                squares[i].className = generateColor(totals);\r\n                squares[i + 1].className = generateColor(totals);\r\n                squares[i + 1].classList.add(\"score-addition\")\r\n\r\n                squares[i + 1].innerHTML = 0;\r\n                // squares[i + 1].classList.add(\"missing\");\r\n                score += totals;\r\n                scoreDisplay.innerHTML = score;\r\n            }\r\n        }\r\n        ;\r\n        checkIfWin()\r\n    }\r\n\r\n    function generateColor(number) {\r\n        switch (number) {\r\n            case 2:\r\n                return \"_2\"\r\n            case 4:\r\n                return \"_4\"\r\n            case 8:\r\n                return \"_8\"\r\n            case 16:\r\n                return \"_16\"\r\n            case 32:\r\n                return \"_32\"\r\n            case 64:\r\n                return \"_64\"\r\n            case 128:\r\n                return \"_128\"\r\n            default:\r\n                return \"zero\"\r\n        }\r\n    }\r\n\r\n    function combineColumn() {\r\n        for (let i = 0; i < 12; i++) {\r\n            if (squares[i].innerHTML === squares[i + width].innerHTML) {\r\n                let totals = parseInt(squares[i].innerHTML) + parseInt(squares[i + width].innerHTML)\r\n                squares[i].innerHTML = totals;\r\n                squares[i].className = generateColor(totals);\r\n                squares[i].classList.add(\"score-addition\")\r\n                squares[i + width].innerHTML = 0\r\n                squares[i + width].className = generateColor(0);\r\n                score += totals\r\n                scoreDisplay.innerHTML = score\r\n            }\r\n        }\r\n        checkIfWin()\r\n    }\r\n\r\n    function control(e) {\r\n        if (e.keyCode === 39) {\r\n            keyRight()\r\n        } else if (e.keyCode === 37) {\r\n            keyLeft()\r\n        } else if (e.keyCode === 40) {\r\n            keyDown()\r\n        } else if (e.keyCode === 38) {\r\n            keyUp()\r\n        }\r\n    }\r\n\r\n    document.addEventListener('keyup', control)\r\n\r\n    function keyRight() {\r\n        moveRight()\r\n        combineRow()\r\n        moveRight()\r\n        generateRandomNumber()\r\n    }\r\n\r\n    function keyLeft() {\r\n        moveLeft()\r\n        combineRow()\r\n        moveLeft()\r\n        generateRandomNumber()\r\n    }\r\n\r\n    function keyDown() {\r\n        moveDown()\r\n        combineColumn()\r\n        moveDown()\r\n        generateRandomNumber()\r\n    }\r\n\r\n    function keyUp() {\r\n        moveUp()\r\n        combineColumn()\r\n        moveUp()\r\n        generateRandomNumber()\r\n    }\r\n\r\n    function checkIfWin() {\r\n        for (let i = 0; i < squares.length; i++) {\r\n            if (squares[i].innerHTML == 64) {\r\n                scoreDisplay.innerHTML = \"You Win!\"\r\n                document.removeEventListener('keyup', control)\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkForGameOver() {\r\n        let zeros = 0;\r\n        for (let i = 0; i < squares.length; i++) {\r\n            if (squares[i].innerHTML == 0) {\r\n                zeros++;\r\n            }\r\n        }\r\n        if (zeros === 0) {\r\n            scoreDisplay.innerHTML = \" Game over!\"\r\n            document.removeEventListener('keyup', control)\r\n        }\r\n    }\r\n})"]}